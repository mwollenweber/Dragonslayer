DELETE from dragon_working;
DELETE from shadow_ccfull_working;

INSERT into shadow_ccfull_working (SELECT * from shadow_ccfull where DATE(tdstamp) BETWEEN SUBDATE(CURDATE(), 30) and CURDATE());
INSERT INTO dragon_working (SELECT * from dragon where DATE(tdstamp) = CURDATE());
DELETE FROM dragon_working where event like "DYNAMIC-%";

DELETE from hourly_dragon_bad;
INSERT INTO  hourly_dragon_bad (
SELECT dragon_working.tdstamp, dragon_working.event, dragon_working.srcip, dragon_working.dstip, 'ShadowServer' 
from dragon_working, shadow_ccfull_working
where
	dstip = ip and ((srcip < 2717712385 or srcip > 2717726975)
	and (srcip < 2158256129 or srcip > 2158257919))
	and event not like 'GWU-TEST-Random'
	and  DATE(dragon_working.tdstamp) between CURDATE() and ADDDATE(CURDATE(),1)
	and  DATE(shadow_ccfull_working.tdstamp) between SUBDATE(CURDATE(), 60) and CURDATE()
);


INSERT INTO  hourly_dragon_bad (
SELECT dragon_working.tdstamp, dragon_working.event, dragon_working.dstip, dragon_working.srcip, 'ShadowServer' 
from dragon_working, shadow_ccfull_working
where
	srcip = ip and ((dstip < 2717712385 or dstip > 2717726975)
	and (dstip < 2158256129 or dstip > 2158257919))
	and event not like 'GWU-TEST-Random'
	and  DATE(dragon_working.tdstamp) between CURDATE() and ADDDATE(CURDATE(),1)
	and  DATE(shadow_ccfull_working.tdstamp) between SUBDATE(CURDATE(), 60) and CURDATE()
);

INSERT INTO hourly_dragon_bad (select * from hourly_dragon_mdl);



(look at that fucking awesomeness)

select reporter, count(reporter) as c, week(tdstamp) from gwcases where DATE(tdstamp) BETWEEN SUBDATE(CURDATE(), 90) AND CURDATE() and reporter <> "" group by week(tdstamp), reporter ORDER BY week(tdstamp) DESC, c DESC;
select reporter, hour(tdstamp) as rtime, count(reporter) as cnt from gwcases where DATE(tdstamp) BETWEEN SUBDATE(CURDATE(), 90) AND CURDATE() and reporter <> "" group by hour(tdstamp), reporter ORDER BY reporter, rtime DESC, cnt DESC;



mysql> select count(id), week(tdstamp) from gwcases where DATE(tdstamp) BETWEEN SUBDATE(CURDATE(), 180) AND CURDATE() group by week(tdstamp) ORDER BY id DESC, week(tdstamp) DESC;



SELECT INET_NTOA(patchy.ip), mac_lookup.mac_addr from patchy, mac_lookup where mac_lookup.dev_name = patchy.dev_name GROUP BY ip, mac_addr ORDER BY ip, mac_addr;


#missed daily cases
select hourly_dragon_mdl.tdstamp, hourly_dragon_mdl.event, INET_NTOA(hourly_dragon_mdl.victim), INET_NTOA(hourly_dragon_mdl.attacker)
    from hourly_dragon_mdl,gwcases 
    where hourly_dragon_mdl.victim = gwcases.victim 
    and DATE(gwcases.tdstamp) BETWEEN SUBDATE(CURDATE(), 5)
    and CURDATE() and hourly_dragon_mdl.event <> "DYNAMIC-TCP"
    GROUP BY hourly_dragon_mdl.event, hourly_dragon_mdl.victim, hourly_dragon_mdl.attacker;



SELECT dragon.tdstamp, dragon.event, dragon.srcip, dragon.dstip
                from dragon, shadow_ccfull
                where
                dstip = ip and ((srcip < 2717712385 or srcip > 2717726975)
                and (srcip < 2158256129 or srcip > 2158257919))
                and event not like 'GWU-TEST-Random'
                and  DATE(dragon.tdstamp) between CURDATE() and ADDDATE(CURDATE(),1)
                and  DATE(shadow_ccfull.tdstamp) between SUBDATE(CURDATE(), 60) and CURDATE()
                GROUP BY dragon.srcip, dragon.dstip, dragon.event
                ORDER BY dragon.srcip, dragon.dstip, dragon.event;



--- old crap ---
CREATE TABLE mac_lookup (id INT UNSIGNED NOT NULL AUTO_INCREMENT, dev_name VARCHAR(64) NOT NULL, mac_addr BIGINT UNSIGNED NOT NULL, PRIMARY KEY(id), INDEX(dev_name), INDEX(mac_addr));

create table mdl (tdstamp DATETIME, url VARCHAR(100), ip int unsigned, lookup VARCHAR(50), description VARCHAR(50), registrant VARCHAR(50), PRIMARY KEY (tdstamp, ip), INDEX(tdstamp, url, ip, de\
scription));

create table dragon (tdstamp DATETIME, event VARCHAR(50),  srcip int unsigned, dstip int unsigned, sport int unsigned, dport int unsigned, PRIMARY KEY(tdstamp, srcip, dstip), INDEX(tdstamp, eve\
nt, srcip, dstip));

CREATE TABLE gwcases  (id INT NOT NULL AUTO_INCREMENT, tdstamp DATETIME, remedy_ticket INT UNSIGNED, attacker INT UNSIGNED, victim INT UNSIGNED not NULL, event VARCHAR(32), type VARCHAR(32), no\
tes LONGTEXT, attachments LONGBLOB, network char(32), dns_name char(64), verification LONGTEXT, primary_detection INT UNSIGNED, secondary_detection INT UNSIGNED, event_type int unsigned, import\
ance int unsigned, reporter int unsigned, PRIMARY KEY(id), INDEX(tdstamp, remedy_ticket, attacker, victim, event, type, dns_name, event_type));


select dragon.tdstamp, dragon.event, INET_NTOA(dragon.srcip), INET_NTOA(dragon.dstip)
from dragon, mdl
where
dstip = ip and ((srcip < 2717712385 or srcip > 2717726975)
and (srcip < 2158256129 or srcip > 2158257919))
and event not like 'GWU-TEST-Random'
and  DATE(dragon.tdstamp) between CURDATE() and CURDATE()+1
GROUP BY dragon.srcip
ORDER BY dragon.srcip, dragon.dstip, dragon.event;


select dragon.tdstamp, dragon.event, INET_NTOA(dragon.dstip), INET_NTOA(dragon.srcip)
from dragon, mdl
where
srcip = ip and ((dstip < 2717712385 or dstip > 2717726975)
and (dstip < 2158256129 or dstip > 2158257919))
and event not like 'GWU-TEST-Random'
and  DATE(dragon.tdstamp) between CURDATE() and CURDATE()+1
GROUP BY dragon.dstip
ORDER BY dragon.dstip, dragon.srcip, dragon.event;


select dstip, count(*) as x, INET_NTOA(dstip), event, tdstamp from dragon where event like "GWU-TEST-SMTP-SURGE" and DATE(tdstamp) between CURDATE()-60 and CURDATE() GROUP BY dstip having x > 1\
0 order by x desc limit 10;

select dstip, event, count(*) as c, INET_NTOA(dstip), tdstamp from dragon where dstip=2158263987 GROUP BY
dstip, event ORDER  BY dstip, tdstamp, event limit 10;

